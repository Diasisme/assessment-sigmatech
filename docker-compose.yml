services:
  db:
    image: postgres:latest
    container_name: assessment-sigmatech
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB?Variable not set}
      POSTGRES_USER: ${POSTGRES_USER?Variable not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD?Variable not set}
      TZ: "Asia/Jakarta"
    ports:
      - ${POSTGRES_DB_EXPOSE_PORT?Variable not set}:${POSTGRES_DB_PORT?Variable not set}
    networks:
      - sigmatech-network
    volumes:
      - postgre_data:/var/lib/postgresql/data
      - ./data/postgres:/docker-entrypoint-initdb.d
  svc-sigmatech:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: svc-sigmatech
    ports:
      -  ${SVC_PORT?Variable not set}:${SVC_PORT?Variable not set}
    networks:
      - sigmatech-network
    volumes:
      - ./:/app
  # svc-journal:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: svc-journal
  #   ports:
  #     -  ${SVC_PORT?Variable not set}:${SVC_PORT?Variable not set}
  #   networks:
  #     - svc-network
  #   volumes:
  #     - ./:/app
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.4.4
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #   ports:
  #     - 22181:2181
  # kafka:
  #   image: confluentinc/cp-kafka:7.4.4
  #   depends_on:
  #     - zookeeper
  #   ports:
  #     - 29092:29092
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgre_data:
    name: assessment-sigmatech-data
    external: true

networks:
  sigmatech-network:
    name: sigmatech-network
  